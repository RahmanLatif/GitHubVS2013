<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhpQD2AIcAACgkJDo2NkNAQExJSUxJUlVJSVVSUl9cZWhcUnFubnFueHF4eHpuUnp4bnp4eIOB
        gYx4XIyKipaKUpaKZZaUlJaUnZ+dnaimnaimprGUSbGUXLGwsLGwubqdQLqdUrqwsLq5ucOmScPCucPC
        ws2wLc3MzM3M1c3VzNamLdawLdawNtbV1dbV3t+5Sd+5XN/CZd/V1d/V3t/e1d/e3ujCeOjVlOjo3vHe
        pvHeufHx8frozPrx6Pr6+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAApQD2AAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        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
</value>
  </data>
</root>